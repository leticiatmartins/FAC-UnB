.data
    quebra: .asciz "\n"
    str1: .space 200
    str2: .space 200

.text

.globl main

main:
    li t0, 0   # Inicializa o contador de acertos com 0

    # Lê o tamanho das strings
    li a7, 5
    ecall
    mv a1, a0
    mv s1, a0

    # Lê a string 1
    li a7, 8
    la a0, str1
    li a1, 200
    ecall
    mv t1, a0

    # Lê a string 2
    li a7, 8
    la a0, str2
    li a1, 200
    ecall

    # Armazena as strings dentro dos registradores t1 e t2
    
    mv t2, a0

    # Inicializa t3 com o 0
    li t3, 0

    loop:
        # Quando o valor do registrador t3 for igual a a1, vá para o procedimento de saída
        beqz s1, exit

        # Carrega cada caractere
        lb a2, 0(t1)
        lb a3, 0(t2)
        addi s1, s1, -1

        # Verifica se o caractere é igual ou não
        beq a2, a3, soma
        j verifica_prox

    # Procedimento que avança, incrementando os caracteres verificados e t3
    verifica_prox:
        addi t1, t1, 1
        addi t2, t2, 1
        addi t3, t3, 1
        j loop

    # Procedimento que soma a quantidade de acertos e avança os caracteres
    soma:
        addi t1, t1, 1
        addi t2, t2, 1
        addi t3, t3, 1
        addi t0, t0, 1
        j loop



    # Procedimento que finaliza o programa
    exit:
    # Exibir o número de acertos
    li a7, 1
    mv a0, t0
    ecall
    li a7, 4        # Syscall para imprimir inteiro
    la a0, quebra      # Número de acertos em a0
    ecall
    li a7, 10
    ecall