.data
    result_str: .asciz "\n"
    sim: .asciz "sim"
    nao: .asciz "nao"
    invalida: .asciz "Entrada invalida."

.text
    main:
        # Lendo o primeiro número
        li a7, 5
        ecall
        mv s0, a0

        # Lendo o segundo número
        li a7, 5
        ecall
        mv s1, a0

        li t0, 2

        blez s0, inval
        blez s1, inval

    mmc:
        bge t0, s1, mdc
        mul t1, s0, t0
        divu t2, t1, s1
        remu t5, t1, s1
        beqz t5, obtem
        addi t0, t0, 1
        j mmc

    obtem:
        mv t4, t1
        addi t0, s1, 1

    mdc:
        beqz s1, return
        divu t3, s0, s1
        remu t3, s0, s1
        mv s0, s1
        mv s1, t3
        j mdc

    return:
        li a7, 4
        la a0, result_str
        ecall

        li a7, 4
        la a0, invalida
        ecall

        li a7, 4
        la a0, result_str
        ecall

        li a7, 4
        li a0, 1
        mv a0, t4
        ecall

        j sair

    inval:
        li a7, 4
        la a0, invalida
        ecall
        j sair

    sair:
        li a7, 10
        ecall
