.data
result_str: .asciz "\n"

.text
# Leitura de n
li a7, 5
ecall
mv t0, a0  # Move o valor lido para t0 (n)

# Inicializa o valor máximo como o menor número possível (-2147483648)
li t2, -2147483648

# Loop para ler os números e determinar o máximo
li t3, 0  # Inicializa contador

loop:
    # Verifica se o contador atingiu n
    beq t3, t0, done

    # Leitura do próximo número
    li a7, 5
    ecall
    mv t4, a0  # Move o valor lido para t4

    # Comparação com o valor máximo atual
    bge t4, t2, update_max  # Se t4 >= t2, vá para update_max

    # Incrementa o contador
    addi t3, t3, 1

    j loop

update_max:
    # Atualiza o valor máximo com o número lido
    mv t2, t4

    # Incrementa o contador
    addi t3, t3, 1

    j loop

done:
    # Imprime o maior número
    li a7, 1
    mv a0, t2  # Coloca o resultado no registrador de argumento
    ecall

    # Imprime uma nova linha
    li a7, 4
    la a0, result_str
    ecall

    # Termina o programa
    li a7, 10
    ecall
